{"version":3,"sources":["webpack:///src/minesweeper/components/scorepanel/scorepanel.component.ts","webpack:///src/minesweeper/components/scorepanel/scorepanel.component.html","webpack:///src/minesweeper/components/grid/grid.component.ts","webpack:///src/minesweeper/components/grid/grid.component.html","webpack:///src/environments/environment.ts","webpack:///src/minesweeper/components/board/board.component.ts","webpack:///src/minesweeper/components/board/board.component.html","webpack:///src/models/grid.ts","webpack:///src/minesweeper/services/game.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/minesweeper/components/cell/cell.component.ts","webpack:///src/minesweeper/components/cell/cell.component.html","webpack:///src/models/board.ts","webpack:///src/models/cell.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ScorepanelComponent","gameService","resetGame","newGame","selector","templateUrl","styleUrls","board","GridComponent","cell","mine","gameOver","floodReveal","checkWin","flag","grid","environment","production","BoardComponent","Grid","rows","cols","cells","Array","i","length","j","GameService","mineNumber","inizializeGame","unrevealedCells","availableFlags","mines","flagged","revealed","neighbours","x","y","cleaned","emoji","console","log","setmines","countNeighbours","n","availablePositions","push","index","Math","floor","random","position","splice","AppComponent","createBoard","getBoard","AppModule","declarations","imports","providers","bootstrap","CellComponent","reveal","content","textStyle","emit","handleReveal","handleFlag","Board","Cell","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { GameService } from '../../services/game.service';\nimport { Board } from '../../../models/board';\n\n@Component({\n  selector: 'score-panel',\n  templateUrl: './scorepanel.component.html',\n  styleUrls: ['./scorepanel.component.scss']\n})\nexport class ScorepanelComponent implements OnInit {\n\n  @Input() board: Board;\n  emoji: string;\n  \n  constructor(private gameService: GameService) { }\n\n  ngOnInit() {\n  }\n\n  newGame() {\n    this.gameService.resetGame();\n  }\n}\n","<div>\n    <span>{{ board.availableFlags }}</span>\n    <button (click)=\"newGame()\">{{ board.emoji }}</button>\n    <span>{{ board.unrevealedCells }}</span>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Grid } from '../../../models/grid';\nimport { Cell } from '../../../models/cell';\nimport { GameService } from '../../services/game.service';\n\n@Component({\n  selector: 'grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements OnInit {\n\n  @Input() grid: Grid;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit() {\n  }\n\n  handleReveal(cell: Cell) {\n    if (cell.mine) {\n      this.gameService.gameOver();\n    } else {      \n      this.gameService.floodReveal(cell);\n      this.gameService.checkWin();      \n    }\n  }\n\n  handleFlag(cell: Cell) {\n    this.gameService.flag(cell);\n  }\n}","<div *ngFor=\"let row of grid.cells\">\n    <cell [cell]=\"cell\" *ngFor=\"let cell of row\" (reveal)=\"handleReveal($event)\" (flag)=\"handleFlag($event)\"></cell>\n</div>","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Board } from '../../../models/board';\n\n@Component({\n  selector: 'board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n\n  @Input() board: Board;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<score-panel [board]=\"board\"></score-panel>\n<grid [grid]=\"board.grid\"></grid>","import { Cell } from \"./cell\";\n\nexport class Grid {\n    cells: Array<Array<Cell>>;\n\n    constructor(rows: number, cols: number) {\n        this.cells = new Array<Array<Cell>>(rows);\n        for(let i=0; i < this.cells.length; i++) {\n            this.cells[i] = new Array<Cell>(cols)\n            for(let j=0; j< this.cells[i].length; j++) {\n                this.cells[i][j] = new Cell(i, j);\n            }            \n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Board } from '../../models/board';\nimport { Cell } from '../../models/cell';\n\n@Injectable()\nexport class GameService {\n\n  private board: Board;\n\n  constructor() { }\n\n  createBoard(rows: number, cols: number, mineNumber: number) {\n    this.board = new Board(rows, cols, mineNumber);\n\n    this.inizializeGame(mineNumber);\n  }\n\n  getBoard(): Board {\n    return this.board;\n  }\n\n  resetGame() {\n\n    this.board.unrevealedCells = this.board.rows * this.board.cols;\n    this.board.availableFlags = this.board.mines;\n\n    for (let i = 0; i < this.board.rows; i++) {\n      for (let j = 0; j < this.board.cols; j++) {\n        this.board.grid.cells[i][j] = new Cell(i, j);\n      }\n    }\n\n    this.inizializeGame(this.board.mines);\n  }\n\n  // If there are no mine around\n  floodReveal(cell: Cell) {\n\n    if (!cell.flagged && !cell.revealed && !cell.mine) {\n      cell.revealed = true;\n      this.board.unrevealedCells--;\n\n      if (!cell.neighbours) {\n        for (let i = -1; i < 2; i++) {\n          for (let j = -1; j < 2; j++) {\n\n            let x = cell.x + i;\n            let y = cell.y + j;\n\n            if (this.board.grid.cells[x] && this.board.grid.cells[x][y]) {\n              this.floodReveal(this.board.grid.cells[x][y]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  checkWin() {\n    if (this.board.unrevealedCells === this.board.mines) {\n      for (let i = 0; i < this.board.rows; i++) {\n        for (let j = 0; j < this.board.cols; j++) {\n          this.board.grid.cells[i][j].revealed = true;\n          this.board.grid.cells[i][j].flagged = false;\n          if (this.board.grid.cells[i][j].mine) {\n            this.board.grid.cells[i][j].cleaned = true;\n          }\n        }\n      }\n      this.board.emoji = \"🥳\";\n      console.log(\"YOU WIN!\");\n    }\n  }\n\n  gameOver() {\n    for (let i = 0; i < this.board.rows; i++) {\n      for (let j = 0; j < this.board.cols; j++) {\n        this.board.grid.cells[i][j].revealed = true;\n        this.board.grid.cells[i][j].flagged = false;\n      }\n    }\n    this.board.emoji = \"💩\";\n    console.log(\"YOU LOSE!\");\n  }\n\n  flag(cell: Cell) {\n    if(cell.flagged) {\n      this.board.availableFlags++\n      cell.flagged = false;\n    } else if (this.board.availableFlags > 0) {\n      this.board.availableFlags--\n      cell.flagged = true;\n    }  \n  }\n\n  private inizializeGame(mineNumber: number) {\n    this.setmines(mineNumber);\n    this.board.emoji = \"😊\";\n\n    // Pre-count the numer of neighbours per cell\n    for (let i = 0; i < this.board.rows; i++) {\n      for (let j = 0; j < this.board.cols; j++) {\n        this.board.grid.cells[i][j].neighbours = this.countNeighbours(this.board.grid.cells[i][j]);\n      }\n    }\n  }\n\n  private setmines(n: number) {\n    let availablePositions = [];\n    for (let i = 0; i < this.board.rows; i++) {\n      for (let j = 0; j < this.board.cols; j++) {\n        availablePositions.push({ x: i, y: j });\n      }\n    }\n\n    for (let i = 0; i < n; i++) {\n      let index = Math.floor(Math.random() * availablePositions.length);\n      let position = availablePositions[index];\n\n      this.board.grid.cells[position.x][position.y].mine = true;\n\n      availablePositions.splice(index, 1);\n    }\n  }\n\n  private countNeighbours(cell: Cell): number {\n\n    let neighbours = 0;\n\n    for (let i = -1; i < 2; i++) {\n      for (let j = -1; j < 2; j++) {\n\n        let x = cell.x + i;\n        let y = cell.y + j;\n\n        if (this.board.grid.cells[x] && this.board.grid.cells[x][y] && this.board.grid.cells[x][y].mine) {\n          neighbours = neighbours + 1;\n        }\n      }\n    }\n\n    return neighbours;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { Board } from '../models/board';\nimport { GameService } from '../minesweeper/services/game.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public board: Board;\n\n  constructor(private gameService: GameService) {\n    \n    gameService.createBoard(9, 9, 10);\n    this.board = gameService.getBoard();\n  }\n}\n","<board [board]=\"board\"></board>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from '../minesweeper/components/board/board.component';\nimport { GridComponent } from '../minesweeper/components/grid/grid.component';\nimport { CellComponent } from '../minesweeper/components/cell/cell.component';\nimport { ScorepanelComponent } from '../minesweeper/components/scorepanel/scorepanel.component';\n\nimport { GameService } from '../minesweeper/services/game.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    GridComponent,\n    CellComponent,\n    ScorepanelComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    GameService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Cell } from '../../../models/cell';\n\n@Component({\n  selector: 'cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.scss']\n})\nexport class CellComponent implements OnInit {\n\n  @Input() cell: Cell;\n  @Output() reveal: EventEmitter<Cell> = new EventEmitter<Cell>();\n  @Output() flag: EventEmitter<Cell> = new EventEmitter<Cell>();\n\n  public textStyle: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.cell.mine) {\n      this.cell.content = this.cell.neighbours ? this.cell.neighbours + '' : '';\n    }\n\n    switch(this.cell.neighbours) {\n      case 1:\n        this.textStyle = {'color' : 'blue' };\n        break;\n      case 2:\n        this.textStyle = {'color' : 'green' };    \n        break;\n      case 3:\n        this.textStyle = {'color' : 'red' };    \n        break;\n      case 4:\n        this.textStyle = {'color' : 'darkblue' };    \n        break;\n      default:\n        break;\n    }\n  }\n\n  handleReveal() {\n    if (!this.cell.flagged) {\n      this.reveal.emit(this.cell);\n    }\n  }\n\n  handleFlag() {\n    this.flag.emit(this.cell);    \n    return false;\n  }\n}\n","<button [ngClass]=\"{ 'revealed' : cell.revealed, 'flagged' : cell.flagged, 'mine' : cell.mine, 'cleaned' : cell.cleaned }\" \n    [ngStyle]=\"textStyle\"\n    (click)=\"handleReveal()\" \n    (contextmenu)=\"handleFlag()\">{{ cell.revealed ? cell.content : '' }}\n</button>","import { Grid } from \"./grid\";\n\nexport class Board {\n    playerName: string;\n\n    rows: number;\n    cols: number;\n\n    unrevealedCells: number;\n    availableFlags: number;\n    mines: number;\n\n    grid: Grid;\n    emoji: string;\n\n    constructor(rows: number, cols: number, mines: number) {\n        this.rows = rows;\n        this.cols = cols;\n        this.unrevealedCells = rows * cols;\n        \n        this.mines = mines;\n        this.availableFlags = mines;\n\n        this.grid = new Grid(rows, cols);\n    }\n}\n","export class Cell {\n    mine: boolean;\n    revealed: boolean;\n    cleaned: boolean;\n    flagged: boolean;\n    neighbours: number;\n    content: string;\n\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}